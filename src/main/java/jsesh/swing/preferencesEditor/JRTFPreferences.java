/*
 * JRTFPreferences.java
 *
 * Created on 5 novembre 2008, 18:52
 */

package jsesh.swing.preferencesEditor;

import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;

/**
 *
 * @author  rosmord
 */
public class JRTFPreferences extends javax.swing.JPanel {

    /** Creates new form JRTFPreferences */
    public JRTFPreferences() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exportModeField = new javax.swing.JComboBox();
        cadratHeightField = new javax.swing.JFormattedTextField();
        unitField = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        respectLayoutModeField = new javax.swing.JCheckBox();
        graphicFormatCB = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        exportModeField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        unitField.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Export mode");

        jLabel2.setText("Cadrat Height");

        respectLayoutModeField.setText("Respect text layout");
        respectLayoutModeField.setToolTipText("<html>Try to respect the original text layout.<br>\n(for instance, if the text is in column,<br>\nthe system will use \"export as one large<br>\npicture)\n ");
        respectLayoutModeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respectLayoutModeFieldActionPerformed(evt);
            }
        });

        graphicFormatCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        graphicFormatCB.setToolTipText("<html>The graphic format used for drawing the hieroglyphs<br>\nThe choice depends on you system and on your word processor.\n<ul>\n<li>Default will use your system default, good for M/S Word.\n<li>WMF is reasonable on windows and somehow portable\n<li>MAC PICT is good on Mac and somehow portable\n<li>EMF support is experimental, and doesn't work well with Mac AND WORD\n</ul>\nIf you are using OpenOffice and don't plan to export to word, EMF might be a good solution.\n");

        jLabel3.setText("Graphic format");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(graphicFormatCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 29, Short.MAX_VALUE)
                        .add(respectLayoutModeField))
                    .add(layout.createSequentialGroup()
                        .add(cadratHeightField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 167, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(unitField, 0, 116, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, exportModeField, 0, 290, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(exportModeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cadratHeightField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(unitField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(respectLayoutModeField)
                    .add(jLabel3)
                    .add(graphicFormatCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void respectLayoutModeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respectLayoutModeFieldActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_respectLayoutModeFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField cadratHeightField;
    private javax.swing.JComboBox exportModeField;
    private javax.swing.JComboBox graphicFormatCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox respectLayoutModeField;
    private javax.swing.JComboBox unitField;
    // End of variables declaration//GEN-END:variables

    public JFormattedTextField getCadratHeightField() {
        return cadratHeightField;
    }

    public JComboBox getExportModeField() {
        return exportModeField;
    }

    public JCheckBox getRespectLayoutModeField() {
        return respectLayoutModeField;
    }

    public JComboBox getUnitField() {
        return unitField;
    }

    public JComboBox getGraphicFormatCB() {
        return graphicFormatCB;
    }

    
}
